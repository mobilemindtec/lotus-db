[
	{sql_bridge, [
    %% module_alias creates a module with the specified name, which can be
    %% used as an alias to the sigma_sql module.
    {module_alias, db},

    %% There are three adapters that can be used:
    %%  + sql_bridge_epgsql: PostgreSQL adapter using epgsql
    %%  + sql_bridge_mysql_otp: MySQL adapter using mysql-otp
    {adapter, sql_bridge_mysql_otp},

    %% connection parameters (self explanitory, I hope)
    {host, "127.0.0.1"},
    {port, 3306},
    {user, "root"},
    {pass, "131054"},
    %% all connection parameters can also be determined from 
    %% a module or set from environment variables
    %%
    %% e.g. by a module function repo:get_host()
    %% {host, {mod, repo, get_host }}
    %%
    %% or e.g. by an environment variable MY_HOST 
    %% {host, {env, "MY_HOST"}}

    %% There are two different ways to determine database
    %%
    %% 1) All requests go to a single database, called 'database_name':
    {lookup, zum},
    %%
    %% 2) Before a request is made, run the function
    %% `lookup_module:lookup_function()`, for which the return value will
    %% be the database name
    %%{lookup, {lookup_module, lookup_function}},

    %% Number of connections to establish per pool (which really means
    %% number of connections per database).
    {connections_per_pool, 10},

    %% If a connection pool is saturated, this allows additional "overflow"
    %% connections to be established up to the limit specified below.
    {overflow_connections_per_pool, 10},

    %% If you prefer your string types (varchars, texts, etc) to be returned as erlang lists rather than binaries, set the following to true:
    {stringify_binaries, false},
    {replacement_token_style, '?'}
	]}  
].